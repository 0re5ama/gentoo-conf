--- src/CharacterColor.h	2014-11-01 05:17:02.000000000 +0100
+++ src/CharacterColor.h	2015-06-11 08:15:00.414756174 +0200
@@ -260,18 +260,21 @@
     }
     u -= 8;
 
-    //  16..231: 6x6x6 rgb color cube
-    if (u < 216) {
-        return QColor(((u / 36) % 6) ? (40 * ((u / 36) % 6) + 55) : 0,
-                      ((u / 6) % 6) ? (40 * ((u / 6) % 6) + 55) : 0,
-                      ((u / 1) % 6) ? (40 * ((u / 1) % 6) + 55) : 0);
+    //  16..79: 4x4x4 rgb color cube
+    if (u < 64) {
+        static const int cmap[4] = {0, 139, 205, 255};
+        return QColor(cmap[(u / 16) % 4], cmap[(u / 4) % 4], cmap[(u / 1) % 4]);
     }
-    u -= 216;
+    u -= 64;
 
-    // 232..255: gray, leaving out black and white
-    int gray = u * 10 + 8;
+    // 80..87: gray, leaving out black and white
+    if (u < 8) {
+        int gray = u * 27 + 46;
+        return QColor(gray, gray, gray);
+    }
 
-    return QColor(gray, gray, gray);
+    // 88..255: black
+    return QColor(0, 0, 0);
 }
 
 inline QColor CharacterColor::color(const ColorEntry* base) const
